`timescale 1ns/1ns
module tb_top();
	parameter CLOCK_PERIOD = 10;
	reg clk;
	reg rst;

	//===========生成时钟和复位信号===============
	always #(CLOCK_PERIOD/2) clk = ~clk;
	initial begin
		clk = 0;
		rst = 1;
		#CLOCK_PERIOD;
		rst = 0;
	end


	reg load_en;
	reg out_en;
	reg  [`ARRAYWIDTH*`DATASIZE-1:0] in_act;
	wire [`ARRAYWIDTH*`DATASIZE-1:0] out_act;


	initial begin
		#10;
		load_en = 1;
		out_en = 0;
		in_act = 'h0807060504030201;
		#10;
		in_act = 'h100f0e0d0c0b0a09;
		#10;
		in_act = 'h1817161514131211;
		#10;
		in_act = 'h201f1e1d1c1b1a19;
		#10;
		in_act = 'h2827262524232221;
		#10;
		in_act = 'h302f2e2d2c2b2a29;
		#10;
		in_act = 'h3837363534333231;
		#10;
		in_act = 'h403f3e3d3c3b3a39;
		#10;
		load_en = 0;
		out_en = 1;
		#1000;
		$finish;
	end

	input_buffer u_in_buf(
		.clk(clk),
		.rst(rst),
		.load_en(load_en),
		.out_en(out_en),
		.in_act(in_act),
		.out_act(out_act)
	);


	initial begin
		$dumpfile("tb_top.fsdb");
		$dumpvars(0,tb_top);
	end
	

endmodule
